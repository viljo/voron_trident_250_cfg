#####################################################################
#	macros.cfg
#####################################################################

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    # Parameters
    {% set bedtemp = params.BED|default(55)|int %}
    {% set hotendtemp = params.EXTRUDER|default(215)|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}
    {% set filamenttype = params.FILAMENT|default(PLA)|string %}
    ## Metric values
    G21
    ## Absolute positioning
    G90 
    ## Set extruder to absolute mode
    M82
    ## Reset feedrate to 100%
    M220 S100
    ## Reset flowrate to 100%
    M221 S100
    # Set normal Z offset
    SET_GCODE_OFFSET Z=0 MOVE=1

    ## Start heating bed and hotend
    M117 Starting heating....
    M140 S{bedtemp} ; start heating the bed 
    M104 S{hotendtemp} T0 ; start heating T0 

    status_homing
    SET_PIN PIN=caselight VALUE=1
    G28 X Y Z                                                                    ; Always home X Y Z
    HOME_AXIS
    G1 Y250 X250 F10000 ; Move to wait position to dribble filament on the side of the printbead
    SET_PIN PIN=caselight VALUE=0

    # Wait for all temperatures to reach targets
    status_heating
    M106 S255 ; Turn on parts fan
    M117 Waiting for/checking bed temp....
    M190 S{bedtemp}                                                              ; set & wait for bed temp
    M117 Waiting for/checking chaimber temp....
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chambertemp}   ; wait for chamber temp
    M117 Waiting for/checking hotend temp....
    M109 S{hotendtemp}                                                           ; set & wait for hotend temp

    SET_PIN PIN=caselight VALUE=1

    # Brush extruder to remove strings before Leveling bed
    #M117 Wiping hotend against brush....
    #BRUSH_WIPE
    M106 S0 ; Turn off parts fan
    M117 Homing / gantry leveling.... 
    ATTACH_PROBE
    Z_TILT_ADJUST
    DOCK_PROBE                                                                  ; final gantry leveling and z homing
    #M117 Purging extruder....
    #PURGE_BLOB
    #clean_nozzle

    # Different Z offsets depending on filament type
    {% if filamenttype == 'ABS' %}
    #    SET_GCODE_OFFSET Z=-0.25 MOVE=1 ; Print first ABS layer thighter to bead
    {% elif filamenttype == 'PLA' %}
    #    SET_GCODE_OFFSET Z=0 MOVE=1 ; PLA has normal Z offset
    {% elif filamenttype == 'ASA' %}
    #   SET_GCODE_OFFSET Z=-0.05 MOVE=1 ; Print first ASA layer thighter to bed
    {% else %}
    #    SET_GCODE_OFFSET Z=0 MOVE=1 ; all others -> normal Z offset
    {% endif %}

    status_printing
    M117 Printing...


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[gcode_macro DISABLE_Z_Axis]
#  Used for freely moving gantry
gcode:
    M18 z z1 z2                            ; disable all Z motors

[gcode_macro Load_filament]
#  Used for loading filament
gcode:
  G21 ;Let the printer know you are following this point with metric values
  G90 ;Let the printer know you are using absolute positioning
  LOW_TEMP_CHECK
  G92 E0 ;Reset the position of the extruder
  G1 E80 F2000 ;Feed 80 mm of filament at 2000 mm/minute speed
  G92 E0 ;Reset the position of the extruder

[gcode_macro Unload_filament]
#  Used for unloading filament
gcode:
  G21 ;Let the printer know you are following this point with metric values
  G90 ;Let the printer know you are using absolute positioning
  LOW_TEMP_CHECK
  G92 E0 ;Reset the position of the extruder
  G1 E5 F250 ; Extrude a short distance before unloading to avoid blob forming
  G92 E0 ;Reset the position of the extruder
  G1 E-80 F2000 ;Retract 700 mm of filament at 2000 mm/minute speed, change 700 to the lenght of your bowdentube + 100 mm.
  G92 E0 ;Reset the position of the extruder
  M117 REMOVE FILAMENT NOW ;Display message on LCD-display to remove the filament

[gcode_macro PRESENT_EXTRUDER]
gcode:
    G1 X125 Y0 Z150

[gcode_macro LOW_TEMP_CHECK]
gcode: 
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M117 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < 230 %}  # heat to 230
            M117 No setpoint, heating to 230.
            status_heating
            M109 S230
        {% endif %}
    {% endif %}

[gcode_macro PRE_HEAT_ABS]
gcode:
    M140 S110 ; start heating the bed 
    M104 S250 T0 ; start heating T0 

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M117 Finishing Print
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-1.0 F3600                 ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    SET_GCODE_OFFSET Z=0 MOVE=1 
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z10 F3000                   ; move nozzle up 10mm
    G90                            ; absolute positioning
    G0  X250 Y250 F3600            ; park nozzle at rear
    M117 Finished printing
    SET_PIN PIN=caselight VALUE=0
    status_off

[gcode_macro PAUSE]
description: Pause the actual running print
gcode:
  PAUSE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE


[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro M600]
gcode:
    M117 Printing Paused
	PAUSE
	G91
	G1 E-.8 F2700
	G1 Z50
	G90
  	G1 X250 Y250 F3000
	G91
	G1 E-50 F1000
	G90